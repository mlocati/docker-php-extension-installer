name: Test extensions

on:
  - pull_request

jobs:
  check_syntax_data:
    name: Check data syntax
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Check order supported extensions list
        run: |
          sort -o data/supported-extensions.sorted data/supported-extensions
          if ! DIFF="$(diff -u data/supported-extensions data/supported-extensions.sorted)"; then
            printf 'The order of extensions in data/supported-extensions is wrong.\nThe list of required changes is:\n\n%s\n' "$DIFF" >&2
            exit 1
          fi
          rm data/supported-extensions.sorted
          sort -o data/special-requirements.sorted data/special-requirements
          if ! DIFF="$(diff -u data/special-requirements data/special-requirements.sorted)"; then
            printf 'The order of extensions in data/special-requirements is wrong.\nThe list of required changes is:\n\n%s\n' "$DIFF" >&2
            exit 1
          fi
          rm data/special-requirements.sorted
  check_syntax_shell:
    name: Check shell coding style
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: "1.13"
      - name: Install shfmt
        run: GO111MODULE=on go install mvdan.cc/sh/v3/cmd/shfmt
      - name: Checkout
        uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: Check coding style
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          ./scripts/invoke-shfmt check
  check_syntax_php:
    name: Check PHP coding style
    runs-on: ubuntu-latest
    steps:
      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "7.4"
          tools: composer
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Composer dependencies
        run: composer install --no-progress --classmap-authoritative
      - name: Check coding style
        run: composer run-script lint -- --dry-run --diff
  test_extensions:
    needs:
      - check_syntax_data
      - check_syntax_shell
      - check_syntax_php
    strategy:
      matrix:
        distro:
          - alpine3.7
          - alpine3.8
          - alpine3.9
          - alpine3.10
          - alpine3.11
          - alpine3.12
          - alpine3.13
          - jessie
          - stretch
          - buster
    name: Check on ${{ matrix.distro }}
    runs-on: ubuntu-latest
    env:
      DOCKER_DISTRO: ${{ matrix.distro }}
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Test extensions
        run: ./scripts/ci-test-extensions from-commits "${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }}"
  test_restoring_packages:
    name: Test restoring packages
    needs:
      - check_syntax_data
      - check_syntax_shell
      - check_syntax_php
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - run: docker run --rm --volume "$(pwd):/app" --workdir /app php:7.3-stretch ./scripts/test-restore-apt
  test_custom_version:
    name: Test installing specific versions
    needs:
      - check_syntax_data
      - check_syntax_shell
      - check_syntax_php
    runs-on: ubuntu-latest
    strategy:
      matrix:
        xdebug_version:
          - ''
          - 2.9.8
          - 3.0.0
          - ^2
          - ^2.8
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - run: docker run --rm --volume "$(pwd):/app" --workdir /app php:7.4-alpine ./scripts/test-installversion "${{ matrix.xdebug_version }}"
  test_composer:
    name: Test installing composer
    needs:
      - check_syntax_data
      - check_syntax_shell
      - check_syntax_php
    runs-on: ubuntu-latest
    strategy:
      matrix:
        composer_version:
          - ''
          - '1'
          - '2.0.1'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - run: |
          docker run --rm --volume "$(pwd):/app" --workdir /app php:7.4-alpine ./scripts/test-installcomposer "${{ matrix.composer_version }}"

